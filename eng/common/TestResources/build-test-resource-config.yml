parameters:
  SubscriptionConfiguration: $(sub-config-azure-cloud-test-resources)

steps:
  - pwsh: |
      Write-Host "##vso[task.setvariable variable=SubscriptionConfigurationRaw;]"
    displayName: Initialize project list variable

  - ${{ each config in parameters.SubscriptionConfiguration }}:
    - pwsh: |
        Write-Host '${{ config }}'
      displayName: Test

  - ${{ each config in parameters.SubscriptionConfiguration }}:
    - pwsh: |
        Write-Host @'
          ${{ config }}
        '@

        $previous = @'
          $(SubscriptionConfigurationRaw)
        '@ | ConvertFrom-Json -AsHashtable
        $current = @'
          ${{ config }}
        '@ | ConvertFrom-Json -AsHashtable

        Write-Host ($previous | ConvertTo-Json -Compress)
        $raw = ($current | ConvertTo-Json -Compress)

        Write-Host "[task.setvariable variable=SubscriptionConfigurationRaw;]$raw"
        Write-Host "##vso[task.setvariable variable=SubscriptionConfigurationRaw;]$raw"
      displayName: Test Config

  - pwsh: |
      foreach ($c in $(SubscriptionConfigurationRaw)) {
        Write-Host $c
      }
      Write-Host $c
    displayName: Test Print

  - pwsh: |
      Write-Host '${{ convertToJson(parameters.SubscriptionConfiguration) }}'
      Write-Host '${{ convertToJson(parameters.SubscriptionConfiguration) }}'[0]
      Write-Host '${{ convertToJson(parameters.SubscriptionConfiguration) }}'[1]
      Write-Host '${{ convertToJson(parameters.SubscriptionConfiguration) }}'[2]
      Write-Host '${{ convertToJson(parameters.SubscriptionConfiguration) }}'[3]
      Write-Host '${{ convertToJson(parameters.SubscriptionConfiguration) }}'[4]
      Write-Host '${{ convertToJson(parameters.SubscriptionConfiguration) }}'[5]
      Write-Host '${{ convertToJson(parameters.SubscriptionConfiguration) }}'[6]
      Write-Host '${{ convertToJson(parameters.SubscriptionConfiguration) }}'[7]
      Write-Host '${{ convertToJson(parameters.SubscriptionConfiguration) }}'[8]
      Write-Host '${{ convertToJson(parameters.SubscriptionConfiguration) }}'[9]
      Write-Host '${{ convertToJson(parameters.SubscriptionConfiguration) }}'[10]
      Write-Host '${{ convertToJson(parameters.SubscriptionConfiguration) }}'[11]
      Write-Host '${{ convertToJson(parameters.SubscriptionConfiguration) }}'[12]
      Write-Host '${{ convertToJson(parameters.SubscriptionConfiguration) }}'[13]

      $subscriptionConfigurationRaw = @"
        ${{ convertToJson(parameters.SubscriptionConfiguration) }}
      "@

      $subscriptionConfiguration = $subscriptionConfigurationRaw | ForEach-Object {
      }

      $subscriptionConfiguration = @"
        ${{ convertToJson(parameters.SubscriptionConfiguration) }}
      "@ | ConvertFrom-Json -AsHashtable;

      Write-Host ($subscriptionConfiguration | ConvertTo-Json -Compress)

      Write-Host $subscriptionConfiguration[0]
      Write-Host $subscriptionConfiguration[0].SubscriptionId
      Write-Host $subscriptionConfiguration[0].SubscriptionId[0]
      Write-Host $subscriptionConfiguration[0].SubscriptionId[1]
      Write-Host $subscriptionConfiguration[0].SubscriptionId[2]
      Write-Host $subscriptionConfiguration[0].SubscriptionId[3]
      Write-Host $subscriptionConfiguration[0].SubscriptionId[4]
      Write-Host $subscriptionConfiguration[0].SubscriptionId[5]

      if ($subscriptionConfiguration -isnot [Array]) {
          $serialized = $subscriptionConfiguration | ConvertTo-Json -Compress
          Write-Host "##vso[task.setvariable variable=SubscriptionConfiguration;]$serialized"
          exit
      }

      $mergedConfiguration = @{}
      foreach ($config in $subscriptionConfiguration) {
        foreach ($pair in $config.GetEnumerator()) {
          if ($pair.Value -is [Hashtable]) {
            if (!$mergedConfiguration.ContainsKey($pair.Name)) {
              $mergedConfiguration[$pair.Name] = $pair.Value
            } else {
              foreach($nestedPair in $pair.Value.GetEnumerator()) {
                $mergedConfiguration[$pair.Name][$nestedPair.Name] = $nestedPair.Value
              }
            }
          } else {
            $mergedConfiguration[$pair.Name] = $pair.Value
          }
        }
      }

      $mergedConfigurationSerialized = $mergedConfiguration | ConvertTo-Json -Compress
      Write-Host $mergedConfigurationSerialized
      Write-Host "##vso[task.setvariable variable=SubscriptionConfiguration;]$mergedConfigurationSerialized"

    displayName: Build Test Resource Configuration
