parameters:
  SubscriptionConfiguration: $(sub-config-azure-cloud-test-resources)

steps:
  - ${{ if parameters.SubscriptionConfiguration }}:
    - pwsh: |
        $config = @'
          $(SubscriptionConfiguration)
        '@ | ConvertFrom-Json -AsHashtable
        $serialized = $config | ConvertTo-Json -Compress
        Write-Host "##vso[task.setvariable variable=SubscriptionConfiguration;$serialized]"
      displayName: Initialize SubscriptionConfiguration variable

  - ${{ if parameters.SubscriptionConfigurations }}:
    - pwsh: |
        Write-Host "##vso[task.setvariable variable=SubscriptionConfiguration;]"
      displayName: Initialize SubscriptionConfiguration variable
      condition: eq(variables['SubscriptionConfiguration'], '')

    - ${{ each config in parameters.SubscriptionConfigurations }}:
      - pwsh: |
          Write-Host @'
            ${{ config }}
          '@

          $previous = @'
            $(SubscriptionConfiguration)
          '@ | ConvertFrom-Json -AsHashtable
          $current = @'
            ${{ config }}
          '@ | ConvertFrom-Json -AsHashtable

          Write-Host ($previous | ConvertTo-Json -Compress)
          $raw = ($current | ConvertTo-Json -Compress)

          Write-Host "[task.setvariable variable=SubscriptionConfiguration;]$raw"
        displayName: Test Config

    - pwsh: |
        $j = @'
          $(SubscriptionConfiguration)
        '@ | ConvertFrom-Json -AsHashtable
        foreach ($c in $j.GetEnumerator()) {
          Write-Host $c.Name $c.Value.GetType()
        }
        Write-Host $j
      displayName: Test Print

    - pwsh: |
        $config = @'
          $(SubscriptionConfiguration)
        '@ | ConvertFrom-Json -AsHashtable
        $addToConfig = @'
          ${{ config }}
        '@ | ConvertFrom-Json -AsHashtable

        foreach ($pair in $addToConfig.GetEnumerator()) {
          if ($pair.Value -is [Hashtable]) {
            if (!$config.ContainsKey($pair.Name)) {
              $config[$pair.Name] = $pair.Value
            } else {
              foreach($nestedPair in $pair.Value.GetEnumerator()) {
                $config[$pair.Name][$nestedPair.Name] = $nestedPair.Value
              }
            }
          } else {
            $config[$pair.Name] = $pair.Value
          }
        }

        $serialized = $config | ConvertTo-Json -Compress
        Write-Host $serialized
        Write-Host "##vso[task.setvariable variable=SubscriptionConfiguration;]$serialized"

      displayName: Merge Test Resource Configurations
